{"id":"ejercicios/prototype-inheritance.html","dependencies":[{"name":"C:\\Users\\israe\\Documents\\GitHub\\PLATZI\\JS-profesional\\PlatziMediaPlayer\\package.json","includedInParent":true,"mtime":1650942215331}],"generated":{"html":"<!DOCTYPE html>\r\n<html lang=\"en\">\r\n    <head>\r\n        <meta charset=\"UTF-8\">\r\n        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n        <title>prototype-inheritance</title>\r\n    </head>\r\n    <body>\r\n        <a href=\"/ejercicios/\">Go back</a>\r\n        <p><em>Abre la consola</em></p>\r\n\r\n        <h1>\r\n            <code>SomeObject.prototype</code> es un objeto donde definimos el\r\n            prototipo de las instancias de <code>SomeObject</code>. Es decir, las\r\n            instancias de <code>SomeObject</code> van a \"heredar\" de\r\n            <code>SomeObject.prototype</code>.\r\n            <br>\r\n            <br>\r\n            <code>SomeObject.[[Prototype]]</code> es el prototipo de\r\n            <code>SomeObject</code>. Es decir, <code>SomeObject</code> \"hereda\" de\r\n            <code>SomeObject.prototype</code>.\r\n          </h1>\r\n      \r\n\r\n        <script>function Hero(name) {\n  this.name = name;\n}\n\nHero.prototype.saludar = function () {\n  console.log(`New: ${this.name}`);\n};\n\nconst zelda = new Hero(\"Zelda\"); //propiedades de la instancia\n\nconsole.log(`Name: ${zelda.name}`); //propiedades de la clase\n\nconsole.log(`Saludar: ${zelda.saludar}`); //propiedades heredadas ej: toString\n\nconsole.log(`toString: ${zelda.toString}`); //hasOwnProperty (de donde sale toString o esto?)\n\nconsole.log(`zelda.hasOwnProperty(\"saludar\"): ${zelda.hasOwnProperty(\"saludar\")}`);</script>\r\n    </body>\r\n</html>"},"sourceMaps":null,"error":null,"hash":"a4b9fc09750487cbad95dd7d3ce6287e","cacheData":{"env":{}}}